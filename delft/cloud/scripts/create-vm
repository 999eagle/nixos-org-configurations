#! /bin/sh

set -e

id="$1"

# Assign a number to the VM.  From this we derive the MAC and IPv6 addresses.
lastnr=$(flock -x /vmdisks/adhoc-cloud/lock -c 'lastnr=$(cat /vmdisks/adhoc-cloud/last-nr || echo 65536); lastnr=$(($lastnr + 1)); echo $lastnr; echo $lastnr > /vmdisks/adhoc-cloud/last-nr')

id="i-$lastnr${id:+-$id}"

xml=/vmdisks/adhoc-cloud/"$id".xml
image=/vmdisks/adhoc-cloud/"$id".qcow2
info=/vmdisks/adhoc-cloud/"$id".info

if [ -e "$info" -o -e "$xml" -o -e "$image" ]; then
    echo "Virtual machine $id exists!" >&2
    exit 1
fi

# Compute the MAC.
hex=$(printf "%06x" $lastnr)
mac="00:16:3e:${hex:0:2}:${hex:2:2}:${hex:4:2}"
ipv6="2001:610:685:1:216:3eff:fe${hex:0:2}:${hex:2:2}${hex:4:2}"

echo "MAC address is $mac" >&2
echo "IPv6 address is $ipv6" >&2

echo "$ipv6" > "$info"

cat > "$xml" <<EOF
<domain type="kvm">
  <name>adhoc-cloud-$id</name>
  <memory>524288</memory>
  <os>
    <type arch="x86_64">hvm</type>
  </os>
  <features>
    <acpi/>
  </features>
  <devices>
    <graphics type='vnc' socket="/root/vnc-sockets/adhoc-cloud-$id"/>
    <disk type='file'>
      <driver name='qemu' type='qcow2' cache='writeback'/>
      <source file='$image'/>
      <target dev='hda' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='veth0'/>
      <model type='virtio'/>
      <mac address="$mac"/>
    </interface>
    <console type='unix'>
      <source mode="bind" path="/root/console-sockets/adhoc-cloud-$id"/>
      <target type='virtio' port='0'/>
    </console>
  </devices>
</domain>
EOF

#qemu-img create -f qcow2 "$image" -b /vmdisks/nixos-0.1pre26294-x86_64-base.qcow2 >&2
cp /vmdisks/nixos-0.1pre26294-x86_64-base.qcow2 $image

virsh define "$xml" >&2

virsh start "adhoc-cloud-$id" >&2

# Wait until SSH is up.
if [ "$SYNC" != 0 ]; then
    echo -n "Waiting for machine to finish booting..." >&2
    for ((i = 0; i < 60; i++)); do
	if ping6 -c1 "$ipv6" > /dev/null; then break; fi
	echo -n "." >&2
    done
    echo >&2
fi

echo $id
